---
apiVersion: v1
kind: Template
labels:
  template: "${REPO_NAME}-template"
metadata:
  name: "${REPO_NAME}-backend-dc"
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp:
    labels:
      app: "${APP_NAME}-${JOB_NAME}"
    name: "${APP_NAME}-backend-${JOB_NAME}"
  spec:
    replicas: ${{MIN_REPLICAS}}
    selector:
      app: "${APP_NAME}-${JOB_NAME}"
      deploymentconfig: "${APP_NAME}-backend-${JOB_NAME}"
    strategy:
      resources: {}
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp:
        labels:
          app: "${APP_NAME}-${JOB_NAME}"
          deploymentconfig: "${APP_NAME}-backend-${JOB_NAME}"
      spec:
        containers:
        - image: docker-registry.default.svc:5000/${NAMESPACE}/${REPO_NAME}-backend:${TAG}
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: tls-certs
            mountPath: "/etc/tls-certs"
            readOnly: true
          livenessProbe:
            initialDelaySeconds: 20
            failureThreshold: 5
            httpGet:
              path: "/api/health"
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: "${APP_NAME}-backend-${JOB_NAME}"
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 443
            protocol: TCP 
          readinessProbe:
            initialDelaySeconds: 10
            failureThreshold: 5
            httpGet:
              path: "/api/health"
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: "25m"
              memory: "150Mi"
            limits:
              cpu: "50m"
              memory: "250Mi"
        volumes:
        - name: tls-certs
          secret:
            secretName: student-profile-backend-cert
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${APP_NAME}-backend-${JOB_NAME}"
        from:
          kind: ImageStreamTag
          name: "${REPO_NAME}-backend:${TAG}"
          namespace: "${NAMESPACE}"
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: "student-profile-backend-cert"
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp:
    labels:
      app: "${APP_NAME}-${JOB_NAME}"
    name: "${APP_NAME}-backend-${JOB_NAME}"
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 443-https
      port: 443
      protocol: TCP 
      targetPort: 443
    selector:
      app: "${APP_NAME}-${JOB_NAME}"
      deploymentconfig: "${APP_NAME}-backend-${JOB_NAME}"
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: 'true'
    labels:
      app: "${APP_NAME}-${JOB_NAME}"
    name: "${APP_NAME}-backend-${JOB_NAME}"
  spec:
    host: "${HOST_ROUTE}"
    path: /api
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: "${APP_NAME}-backend-${JOB_NAME}"
      weight: 100
    wildcardPolicy: None
- apiVersion: autoscaling/v2beta1
  kind: HorizontalPodAutoscaler
  metadata:
    name: "${APP_NAME}-backend-${JOB_NAME}-cpu-autoscaler"
  spec:
    scaleTargetRef:
      apiVersion: apps.openshift.io/v1
      kind: DeploymentConfig
      name: "${APP_NAME}-backend-${JOB_NAME}"
      subresource: scale
    minReplicas: ${{MIN_REPLICAS}}
    maxReplicas: ${{MAX_REPLICAS}}
    metrics:
      - type: Resource
        resource:
          name: cpu
          targetAverageUtilization: 90
parameters:
- name: REPO_NAME
  description: Application repository name
  required: true
- name: JOB_NAME
  description: Job identifier (i.e. 'pr-5' OR 'master')
  required: true
- name: NAMESPACE
  description: Target namespace reference (i.e. 'k8vopl-dev')
  required: true
- name: APP_NAME
  description: Application name
  required: true
- name: HOST_ROUTE
  description: The host the route will use to expose service outside cluster 
  required: true
- name: TAG
  description: The identifying tag for this specific deployment
  required: true
- name: MIN_REPLICAS
  description: The minimum amount of replicas
  required: true
- name: MAX_REPLICAS
  description: The minimum amount of replicas
  required: true